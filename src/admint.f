c
c  Original date of RCS archived version is  Jul 31  2009
c
c
c     $Id: admint.f,v 1.3 2012/03/29 20:34:55 agnew Exp agnew $
c
c     $Log: admint.f,v $
c     Revision 1.3  2012/03/29 20:34:55  agnew
c     moved parameter statements to satisfy gfortran
c
c     Revision 1.2  2011/11/18 20:51:38  agnew
c     modified to 342 harmonics, following hardisp (IERS standard)
c
c     Revision 1.1  2011/09/23 22:39:00  agnew
c     Initial revision
c
c
c-------------------------------------
      subroutine admint(ampin,idtin,phin,amp,f,p,nin,nout)
c  Returns the amplitude, frequency, and phase of a set of tidal
c  constituents. n is input as the number wanted, and returned as the number
c  provided.  The constituents used are stored in the arrays idd (doodson
c  number) and tamp (Cartwright-Edden amplitude).  The actual amp and
c  phase of each of these are determined by spline interpolation of the
c  real and imaginary part of the admittance, as specified at a subset
c  of the constituents.
c  The phase is determined for a time set in common block /date/ (see
c  subroutine tdfrph), outside of this subroutine.
c   Note that the arrays f and p must be specified as double precision.
c
c   $$$$calls tdfrph,spline,eval,shells
c
c  Parameters below set the number of harmonics used in the prediction
c  (nt; this must also be set in the main program) and the number of
c  constituents whose amp and phase may be specified (ncon)
c
      integer i,idd,idtin,j,k,key,ll,ncon,ndi,nin,nlp,nout,nsd,nt
      parameter (nt=342)
      parameter (ncon=20)
      real aim,amp,ampin,di,dr,dtr,phin,rf,rl,scr,sdi,sdr,tamp,zdi,zdr
      double precision f,fr,p,pr
c
      dimension ampin(*),idtin(6,*),phin(*)
      dimension amp(*),f(*),p(*)
c  arrays containing information about all stored constituents
      dimension idd(6,nt),tamp(nt)
c  arrays containing information about the subset whose amp and phase may
c  be specified, and scratch arrays for the spline routines
c   at most ncon constituents may be specified.
      dimension rl(ncon),aim(ncon),rf(ncon),key(ncon),scr(ncon),
     1 zdi(ncon),zdr(ncon),di(ncon),dr(ncon),sdi(ncon),sdr(ncon)
      data dtr/.01745329252/
      data rl/ncon*0.0/,aim/ncon*0.0/,rf/ncon*0.0/
      data zdi/ncon*0.0/,zdr/ncon*0.0/,di/ncon*0.0/,dr/ncon*0.0/
      data sdi/ncon*0.0/,sdr/ncon*0.0/
      data tamp/
     1  .632208, .294107, .121046, .079915, .023818,-.023589, .022994,
     2  .019333,-.017871, .017192, .016018, .004671,-.004662,-.004519,
     3  .004470, .004467, .002589,-.002455,-.002172, .001972, .001947,
     4  .001914,-.001898, .001802, .001304, .001170, .001130, .001061,
     5 -.001022,-.001017, .001014, .000901,-.000857, .000855, .000855,
     6  .000772, .000741, .000741,-.000721, .000698, .000658, .000654,
     7 -.000653, .000633, .000626,-.000598, .000590, .000544, .000479,
     8 -.000464, .000413,-.000390, .000373, .000366, .000366,-.000360,
     9 -.000355, .000354, .000329, .000328, .000319, .000302, .000279,
     1 -.000274,-.000272, .000248,-.000225, .000224,-.000223,-.000216,
     2  .000211, .000209, .000194, .000185,-.000174,-.000171, .000159,
     3  .000131, .000127, .000120, .000118, .000117, .000108, .000107,
     4  .000105,-.000102, .000102, .000099,-.000096, .000095,-.000089,
     5 -.000085,-.000084,-.000081,-.000077,-.000072,-.000067, .000066,
     6  .000064, .000063, .000063, .000063, .000062, .000062,-.000060,
     7  .000056, .000053, .000051, .000050, .368645,-.262232,-.121995,
     8 -.050208, .050031,-.049470, .020620, .020613, .011279,-.009530,
     9 -.009469,-.008012, .007414,-.007300, .007227,-.007131,-.006644,
     1  .005249, .004137, .004087, .003944, .003943, .003420, .003418,
     2  .002885, .002884, .002160,-.001936, .001934,-.001798, .001690,
     3  .001689, .001516, .001514,-.001511, .001383, .001372, .001371,
     4 -.001253,-.001075, .001020, .000901, .000865,-.000794, .000788,
     5  .000782,-.000747,-.000745, .000670,-.000603,-.000597, .000542,
     6  .000542,-.000541,-.000469,-.000440, .000438, .000422, .000410,
     7 -.000374,-.000365, .000345, .000335,-.000321,-.000319, .000307,
     8  .000291, .000290,-.000289, .000286, .000275, .000271, .000263,
     9 -.000245, .000225, .000225, .000221,-.000202,-.000200,-.000199,
     1  .000192, .000183, .000183, .000183,-.000170, .000169, .000168,
     2  .000162, .000149,-.000147,-.000141, .000138, .000136, .000136,
     3  .000127, .000127,-.000126,-.000121,-.000121, .000117,-.000116,
     4 -.000114,-.000114,-.000114, .000114, .000113, .000109, .000108,
     5  .000106,-.000106,-.000106, .000105, .000104,-.000103,-.000100,
     6 -.000100,-.000100, .000099,-.000098, .000093, .000093, .000090,
     7 -.000088, .000083,-.000083,-.000082,-.000081,-.000079,-.000077,
     8 -.000075,-.000075,-.000075, .000071, .000071,-.000071, .000068,
     9  .000068, .000065, .000065, .000064, .000064, .000064,-.000064,
     1 -.000060, .000056, .000056, .000053, .000053, .000053,-.000053,
     2  .000053, .000053, .000052, .000050,-.066607,-.035184,-.030988,
     3  .027929,-.027616,-.012753,-.006728,-.005837,-.005286,-.004921,
     4 -.002884,-.002583,-.002422, .002310, .002283,-.002037, .001883,
     5 -.001811,-.001687,-.001004,-.000925,-.000844, .000766, .000766,
     6 -.000700,-.000495,-.000492, .000491, .000483, .000437,-.000416,
     7 -.000384, .000374,-.000312,-.000288,-.000273, .000259, .000245,
     8 -.000232, .000229,-.000216, .000206,-.000204,-.000202, .000200,
     9  .000195,-.000190, .000187, .000180,-.000179, .000170, .000153,
     1 -.000137,-.000119,-.000119,-.000112,-.000110,-.000110, .000107,
     2 -.000095,-.000095,-.000091,-.000090,-.000081,-.000079,-.000079,
     3  .000077,-.000073, .000069,-.000067,-.000066, .000065, .000064,
     4 -.000062, .000060, .000059,-.000056, .000055,-.000051/
      data idd/
     1  2, 0, 0, 0, 0, 0,   2, 2,-2, 0, 0, 0,   2,-1, 0, 1, 0, 0,  
     2  2, 2, 0, 0, 0, 0,   2, 2, 0, 0, 1, 0,   2, 0, 0, 0,-1, 0,  
     3  2,-1, 2,-1, 0, 0,   2,-2, 2, 0, 0, 0,   2, 1, 0,-1, 0, 0,  
     4  2, 2,-3, 0, 0, 1,   2,-2, 0, 2, 0, 0,   2,-3, 2, 1, 0, 0,  
     5  2, 1,-2, 1, 0, 0,   2,-1, 0, 1,-1, 0,   2, 3, 0,-1, 0, 0,  
     6  2, 1, 0, 1, 0, 0,   2, 2, 0, 0, 2, 0,   2, 2,-1, 0, 0,-1,  
     7  2, 0,-1, 0, 0, 1,   2, 1, 0, 1, 1, 0,   2, 3, 0,-1, 1, 0,  
     8  2, 0, 1, 0, 0,-1,   2, 0,-2, 2, 0, 0,   2,-3, 0, 3, 0, 0,  
     9  2,-2, 3, 0, 0,-1,   2, 4, 0, 0, 0, 0,   2,-1, 1, 1, 0,-1,  
     1  2,-1, 3,-1, 0,-1,   2, 2, 0, 0,-1, 0,   2,-1,-1, 1, 0, 1,  
     2  2, 4, 0, 0, 1, 0,   2,-3, 4,-1, 0, 0,   2,-1, 2,-1,-1, 0,  
     3  2, 3,-2, 1, 0, 0,   2, 1, 2,-1, 0, 0,   2,-4, 2, 2, 0, 0,  
     4  2, 4,-2, 0, 0, 0,   2, 0, 2, 0, 0, 0,   2,-2, 2, 0,-1, 0,  
     5  2, 2,-4, 0, 0, 2,   2, 2,-2, 0,-1, 0,   2, 1, 0,-1,-1, 0,  
     6  2,-1, 1, 0, 0, 0,   2, 2,-1, 0, 0, 1,   2, 2, 1, 0, 0,-1,  
     7  2,-2, 0, 2,-1, 0,   2,-2, 4,-2, 0, 0,   2, 2, 2, 0, 0, 0,  
     8  2,-4, 4, 0, 0, 0,   2,-1, 0,-1,-2, 0,   2, 1, 2,-1, 1, 0,  
     9  2,-1,-2, 3, 0, 0,   2, 3,-2, 1, 1, 0,   2, 4, 0,-2, 0, 0,  
     1  2, 0, 0, 2, 0, 0,   2, 0, 2,-2, 0, 0,   2, 0, 2, 0, 1, 0,  
     2  2,-3, 3, 1, 0,-1,   2, 0, 0, 0,-2, 0,   2, 4, 0, 0, 2, 0,  
     3  2, 4,-2, 0, 1, 0,   2, 0, 0, 0, 0, 2,   2, 1, 0, 1, 2, 0,  
     4  2, 0,-2, 0,-2, 0,   2,-2, 1, 0, 0, 1,   2,-2, 1, 2, 0,-1,  
     5  2,-1, 1,-1, 0, 1,   2, 5, 0,-1, 0, 0,   2, 1,-3, 1, 0, 1,  
     6  2,-2,-1, 2, 0, 1,   2, 3, 0,-1, 2, 0,   2, 1,-2, 1,-1, 0,  
     7  2, 5, 0,-1, 1, 0,   2,-4, 0, 4, 0, 0,   2,-3, 2, 1,-1, 0,  
     8  2,-2, 1, 1, 0, 0,   2, 4, 0,-2, 1, 0,   2, 0, 0, 2, 1, 0,  
     9  2,-5, 4, 1, 0, 0,   2, 0, 2, 0, 2, 0,   2,-1, 2, 1, 0, 0,  
     1  2, 5,-2,-1, 0, 0,   2, 1,-1, 0, 0, 0,   2, 2,-2, 0, 0, 2,  
     2  2,-5, 2, 3, 0, 0,   2,-1,-2, 1,-2, 0,   2,-3, 5,-1, 0,-1,  
     3  2,-1, 0, 0, 0, 1,   2,-2, 0, 0,-2, 0,   2, 0,-1, 1, 0, 0,  
     4  2,-3, 1, 1, 0, 1,   2, 3, 0,-1,-1, 0,   2, 1, 0, 1,-1, 0,  
     5  2,-1, 2, 1, 1, 0,   2, 0,-3, 2, 0, 1,   2, 1,-1,-1, 0, 1,  
     6  2,-3, 0, 3,-1, 0,   2, 0,-2, 2,-1, 0,   2,-4, 3, 2, 0,-1,  
     7  2,-1, 0, 1,-2, 0,   2, 5, 0,-1, 2, 0,   2,-4, 5, 0, 0,-1,  
     8  2,-2, 4, 0, 0,-2,   2,-1, 0, 1, 0, 2,   2,-2,-2, 4, 0, 0,  
     9  2, 3,-2,-1,-1, 0,   2,-2, 5,-2, 0,-1,   2, 0,-1, 0,-1, 1,  
     1  2, 5,-2,-1, 1, 0,   1, 1, 0, 0, 0, 0,   1,-1, 0, 0, 0, 0,  
     2  1, 1,-2, 0, 0, 0,   1,-2, 0, 1, 0, 0,   1, 1, 0, 0, 1, 0,  
     3  1,-1, 0, 0,-1, 0,   1, 2, 0,-1, 0, 0,   1, 0, 0, 1, 0, 0,  
     4  1, 3, 0, 0, 0, 0,   1,-2, 2,-1, 0, 0,   1,-2, 0, 1,-1, 0,  
     5  1,-3, 2, 0, 0, 0,   1, 0, 0,-1, 0, 0,   1, 1, 0, 0,-1, 0,  
     6  1, 3, 0, 0, 1, 0,   1, 1,-3, 0, 0, 1,   1,-3, 0, 2, 0, 0,  
     7  1, 1, 2, 0, 0, 0,   1, 0, 0, 1, 1, 0,   1, 2, 0,-1, 1, 0,  
     8  1, 0, 2,-1, 0, 0,   1, 2,-2, 1, 0, 0,   1, 3,-2, 0, 0, 0,  
     9  1,-1, 2, 0, 0, 0,   1, 1, 1, 0, 0,-1,   1, 1,-1, 0, 0, 1,  
     1  1, 4, 0,-1, 0, 0,   1,-4, 2, 1, 0, 0,   1, 0,-2, 1, 0, 0,  
     2  1,-2, 2,-1,-1, 0,   1, 3, 0,-2, 0, 0,   1,-1, 0, 2, 0, 0,  
     3  1,-1, 0, 0,-2, 0,   1, 3, 0, 0, 2, 0,   1,-3, 2, 0,-1, 0,  
     4  1, 4, 0,-1, 1, 0,   1, 0, 0,-1,-1, 0,   1, 1,-2, 0,-1, 0,  
     5  1,-3, 0, 2,-1, 0,   1, 1, 0, 0, 2, 0,   1, 1,-1, 0, 0,-1,  
     6  1,-1,-1, 0, 0, 1,   1, 0, 2,-1, 1, 0,   1,-1, 1, 0, 0,-1,  
     7  1,-1,-2, 2, 0, 0,   1, 2,-2, 1, 1, 0,   1,-4, 0, 3, 0, 0,  
     8  1,-1, 2, 0, 1, 0,   1, 3,-2, 0, 1, 0,   1, 2, 0,-1,-1, 0,  
     9  1, 0, 0, 1,-1, 0,   1,-2, 2, 1, 0, 0,   1, 4,-2,-1, 0, 0,  
     1  1,-3, 3, 0, 0,-1,   1,-2, 1, 1, 0,-1,   1,-2, 3,-1, 0,-1,  
     2  1, 0,-2, 1,-1, 0,   1,-2,-1, 1, 0, 1,   1, 4,-2, 1, 0, 0,  
     3  1,-4, 4,-1, 0, 0,   1,-4, 2, 1,-1, 0,   1, 5,-2, 0, 0, 0,  
     4  1, 3, 0,-2, 1, 0,   1,-5, 2, 2, 0, 0,   1, 2, 0, 1, 0, 0,  
     5  1, 1, 3, 0, 0,-1,   1,-2, 0, 1,-2, 0,   1, 4, 0,-1, 2, 0,  
     6  1, 1,-4, 0, 0, 2,   1, 5, 0,-2, 0, 0,   1,-1, 0, 2, 1, 0,  
     7  1,-2, 1, 0, 0, 0,   1, 4,-2, 1, 1, 0,   1,-3, 4,-2, 0, 0,  
     8  1,-1, 3, 0, 0,-1,   1, 3,-3, 0, 0, 1,   1, 5,-2, 0, 1, 0,  
     9  1, 1, 2, 0, 1, 0,   1, 2, 0, 1, 1, 0,   1,-5, 4, 0, 0, 0,  
     1  1,-2, 0,-1,-2, 0,   1, 5, 0,-2, 1, 0,   1, 1, 2,-2, 0, 0,  
     2  1, 1,-2, 2, 0, 0,   1,-2, 2, 1, 1, 0,   1, 0, 3,-1, 0,-1,  
     3  1, 2,-3, 1, 0, 1,   1,-2,-2, 3, 0, 0,   1,-1, 2,-2, 0, 0,  
     4  1,-4, 3, 1, 0,-1,   1,-4, 0, 3,-1, 0,   1,-1,-2, 2,-1, 0,  
     5  1,-2, 0, 3, 0, 0,   1, 4, 0,-3, 0, 0,   1, 0, 1, 1, 0,-1,  
     6  1, 2,-1,-1, 0, 1,   1, 2,-2, 1,-1, 0,   1, 0, 0,-1,-2, 0,  
     7  1, 2, 0, 1, 2, 0,   1, 2,-2,-1,-1, 0,   1, 0, 0, 1, 2, 0,  
     8  1, 0, 1, 0, 0, 0,   1, 2,-1, 0, 0, 0,   1, 0, 2,-1,-1, 0,  
     9  1,-1,-2, 0,-2, 0,   1,-3, 1, 0, 0, 1,   1, 3,-2, 0,-1, 0,  
     1  1,-1,-1, 0,-1, 1,   1, 4,-2,-1, 1, 0,   1, 2, 1,-1, 0,-1,  
     2  1, 0,-1, 1, 0, 1,   1,-2, 4,-1, 0, 0,   1, 4,-4, 1, 0, 0,  
     3  1,-3, 1, 2, 0,-1,   1,-3, 3, 0,-1,-1,   1, 1, 2, 0, 2, 0,  
     4  1, 1,-2, 0,-2, 0,   1, 3, 0, 0, 3, 0,   1,-1, 2, 0,-1, 0,  
     5  1,-2, 1,-1, 0, 1,   1, 0,-3, 1, 0, 1,   1,-3,-1, 2, 0, 1,  
     6  1, 2, 0,-1, 2, 0,   1, 6,-2,-1, 0, 0,   1, 2, 2,-1, 0, 0,  
     7  1,-1, 1, 0,-1,-1,   1,-2, 3,-1,-1,-1,   1,-1, 0, 0, 0, 2,  
     8  1,-5, 0, 4, 0, 0,   1, 1, 0, 0, 0,-2,   1,-2, 1, 1,-1,-1,  
     9  1, 1,-1, 0, 1, 1,   1, 1, 2, 0, 0,-2,   1,-3, 1, 1, 0, 0,  
     1  1,-4, 4,-1,-1, 0,   1, 1, 0,-2,-1, 0,   1,-2,-1, 1,-1, 1,  
     2  1,-3, 2, 2, 0, 0,   1, 5,-2,-2, 0, 0,   1, 3,-4, 2, 0, 0,  
     3  1, 1,-2, 0, 0, 2,   1,-1, 4,-2, 0, 0,   1, 2, 2,-1, 1, 0,  
     4  1,-5, 2, 2,-1, 0,   1, 1,-3, 0,-1, 1,   1, 1, 1, 0, 1,-1,  
     5  1, 6,-2,-1, 1, 0,   1,-2, 2,-1,-2, 0,   1, 4,-2, 1, 2, 0,  
     6  1,-6, 4, 1, 0, 0,   1, 5,-4, 0, 0, 0,   1,-3, 4, 0, 0, 0,  
     7  1, 1, 2,-2, 1, 0,   1,-2, 1, 0,-1, 0,   0, 2, 0, 0, 0, 0,  
     8  0, 1, 0,-1, 0, 0,   0, 0, 2, 0, 0, 0,   0, 0, 0, 0, 1, 0,  
     9  0, 2, 0, 0, 1, 0,   0, 3, 0,-1, 0, 0,   0, 1,-2, 1, 0, 0,  
     1  0, 2,-2, 0, 0, 0,   0, 3, 0,-1, 1, 0,   0, 0, 1, 0, 0,-1,  
     2  0, 2, 0,-2, 0, 0,   0, 2, 0, 0, 2, 0,   0, 3,-2, 1, 0, 0,  
     3  0, 1, 0,-1,-1, 0,   0, 1, 0,-1, 1, 0,   0, 4,-2, 0, 0, 0,  
     4  0, 1, 0, 1, 0, 0,   0, 0, 3, 0, 0,-1,   0, 4, 0,-2, 0, 0,  
     5  0, 3,-2, 1, 1, 0,   0, 3,-2,-1, 0, 0,   0, 4,-2, 0, 1, 0,  
     6  0, 0, 2, 0, 1, 0,   0, 1, 0, 1, 1, 0,   0, 4, 0,-2, 1, 0,  
     7  0, 3, 0,-1, 2, 0,   0, 5,-2,-1, 0, 0,   0, 1, 2,-1, 0, 0,  
     8  0, 1,-2, 1,-1, 0,   0, 1,-2, 1, 1, 0,   0, 2,-2, 0,-1, 0,  
     9  0, 2,-3, 0, 0, 1,   0, 2,-2, 0, 1, 0,   0, 0, 2,-2, 0, 0,  
     1  0, 1,-3, 1, 0, 1,   0, 0, 0, 0, 2, 0,   0, 0, 1, 0, 0, 1,  
     2  0, 1, 2,-1, 1, 0,   0, 3, 0,-3, 0, 0,   0, 2, 1, 0, 0,-1,  
     3  0, 1,-1,-1, 0, 1,   0, 1, 0, 1, 2, 0,   0, 5,-2,-1, 1, 0,  
     4  0, 2,-1, 0, 0, 1,   0, 2, 2,-2, 0, 0,   0, 1,-1, 0, 0, 0,  
     5  0, 5, 0,-3, 0, 0,   0, 2, 0,-2, 1, 0,   0, 1, 1,-1, 0,-1,  
     6  0, 3,-4, 1, 0, 0,   0, 0, 2, 0, 2, 0,   0, 2, 0,-2,-1, 0,  
     7  0, 4,-3, 0, 0, 1,   0, 3,-1,-1, 0, 1,   0, 0, 2, 0, 0,-2,  
     8  0, 3,-3, 1, 0, 1,   0, 2,-4, 2, 0, 0,   0, 4,-2,-2, 0, 0,  
     9  0, 3, 1,-1, 0,-1,   0, 5,-4, 1, 0, 0,   0, 3,-2,-1,-1, 0,  
     1  0, 3,-2, 1, 2, 0,   0, 4,-4, 0, 0, 0,   0, 6,-2,-2, 0, 0,  
     2  0, 5, 0,-3, 1, 0,   0, 4,-2, 0, 2, 0,   0, 2, 2,-2, 1, 0,  
     3  0, 0, 4, 0, 0,-2,   0, 3,-1, 0, 0, 0,   0, 3,-3,-1, 0, 1,  
     4  0, 4, 0,-2, 2, 0,   0, 1,-2,-1,-1, 0,   0, 2,-1, 0, 0,-1,  
     5  0, 4,-4, 2, 0, 0,   0, 2, 1, 0, 1,-1,   0, 3,-2,-1, 1, 0,  
     6  0, 4,-3, 0, 1, 1,   0, 2, 0, 0, 3, 0,   0, 6,-4, 0, 0, 0/
      k = 0
      nlp = 0
      ndi = 0
      nsd = 0
      do ll=1,nin
c  see if Doodson numbers match
         do kk=1,nt
            ii = 0
            do i=1,6
               ii = ii + iabs(idd(i,kk)-idtin(i,ll))
            enddo
            if(ii.eq.0) go to 5
         enddo
c  have a match - put line into array
 5       if(ii.eq.0.and.k.lt.ncon) then
            k = k + 1
            rl(k) = ampin(ll)*cos(dtr*phin(ll))/abs(tamp(kk))
            aim(k)= ampin(ll)*sin(dtr*phin(ll))/abs(tamp(kk))
c  Now have real and imaginary parts of admittance, scaled by C-E
c  amplitude. Admittance phase is whatever was used in the original
c  expression. (Usually phase is given relative to some reference
c  but amplitude is in absolute units). Next get frequency.
            call tdfrph(idd(1,kk),fr,pr)
            rf(k) = fr
         endif
      enddo
c  done going through constituents--there are k of them
c  have specified admittance at a number of points. sort these by frequency
c  and separate diurnal and semidiurnal, recopying admittances to get them in
c  order
      call shells(rf,key,k)
      do i=1,k
         if(rf(i).lt.0.5) nlp = nlp + 1
         if(rf(i).lt.1.5.and.rf(i).gt.0.5) ndi = ndi + 1
         if(rf(i).lt.2.5.and.rf(i).gt.1.5) nsd = nsd + 1
         scr(i) = rl(key(i))
      enddo
      do i=1,k
         rl(i) = scr(i)
         scr(i) = aim(key(i))
      enddo
      do i=1,k
         aim(i) = scr(i)
      enddo
c  now set up splines (8 cases - four species, each real and imag)
c  we have to allow for the case when there are no constituent amplitudes
c  for the long-period
c
      if(nlp.ne.0) call spline(nlp,rf,rl,zdr,scr)
      if(nlp.ne.0) call spline(nlp,rf,aim,zdi,scr)
      call spline(ndi,rf(nlp+1),rl(nlp+1),dr,scr)
      call spline(ndi,rf(nlp+1),aim(nlp+1),di,scr)
      call spline(nsd,rf(nlp+ndi+1),rl(nlp+ndi+1),sdr,scr)
      call spline(nsd,rf(nlp+ndi+1),aim(nlp+ndi+1),sdi,scr)
c  evaluate all harmonics using the interpolated admittance
      j = 1
      do i=1,nt
         if(idd(1,i).eq.0.and.nlp.eq.0) go to 11
         call tdfrph(idd(1,i),f(j),p(j))
c  phase corrections to equilibrium tide
         if(idd(1,i).eq.0) p(j) = p(j) + 180.
         if(idd(1,i).eq.1) p(j) = p(j) + 90.
         sf = f(j)
         if(idd(1,i).eq.0) re = eval(sf,nlp,rf,rl,zdr)
         if(idd(1,i).eq.0) am = eval(sf,nlp,rf,aim,zdi)
         if(idd(1,i).eq.1) re = eval(sf,ndi,rf(nlp+1),rl(nlp+1),dr)
         if(idd(1,i).eq.1) am = eval(sf,ndi,rf(nlp+1),aim(nlp+1),di)
         if(idd(1,i).eq.2) re =
     1      eval(sf,nsd,rf(nlp+ndi+1),rl(nlp+ndi+1),sdr)
         if(idd(1,i).eq.2) am =
     1      eval(sf,nsd,rf(nlp+ndi+1),aim(nlp+ndi+1),sdi)
         amp(j) = tamp(i)*sqrt(re**2+am**2)
         p(j) = p(j) + atan2(am,re)/dtr
         if(p(j).gt.180) p(j)=p(j)-360.
         j = j + 1
 11      continue
      enddo
      nout = j - 1
      return
      end
